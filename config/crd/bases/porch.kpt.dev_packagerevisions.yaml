---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: packagerevisions.porch.kpt.dev
spec:
  group: porch.kpt.dev
  names:
    kind: PackageRevision
    listKind: PackageRevisionList
    plural: packagerevisions
    singular: packagerevision
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PackageRevision is the Schema for the packagerevisions API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PackageRevisionSpec defines the desired state of PackageRevision.
            properties:
              lifecycle:
                type: string
              packageName:
                description: PackageName identifies the package in the repository.
                type: string
              parent:
                description: Parent references a package that provides resources to
                  us
                properties:
                  name:
                    description: Name is the name of the parent PackageRevision
                    type: string
                required:
                - name
                type: object
              readinessGates:
                items:
                  properties:
                    conditionType:
                      type: string
                  type: object
                type: array
              repository:
                description: RepositoryName is the name of the Repository object containing
                  this package.
                type: string
              revision:
                description: Revision identifies the version of the package.
                minimum: -1
                type: integer
              tasks:
                items:
                  properties:
                    clone:
                      properties:
                        strategy:
                          description: "\tDefines which strategy should be used to
                            update the package. It defaults to 'resource-merge'.\n
                            * resource-merge: Perform a structural comparison of the
                            original /\n   updated resources, and merge the changes
                            into the local package.\n * fast-forward: Fail without
                            updating if the local package was modified\n   since it
                            was fetched.\n * force-delete-replace: Wipe all the local
                            changes to the package and replace\n   it with the remote
                            version.\n * copy-merge: Copy all the remote changes to
                            the local package."
                          type: string
                        upstreamRef:
                          description: '`Upstream` is the reference to the upstream
                            package to clone.'
                          properties:
                            git:
                              description: Git upstream package specification. Required
                                if `type` is `git`. Must be unspecified if `type`
                                is not `git`.
                              properties:
                                directory:
                                  description: Directory within the Git repository
                                    where the packages are stored. A subdirectory
                                    of this directory containing a Kptfile is considered
                                    a package.
                                  type: string
                                ref:
                                  description: '`Ref` is the git ref containing the
                                    package. Ref can be a branch, tag, or commit SHA.'
                                  type: string
                                repo:
                                  description: |-
                                    Address of the Git repository, for example:
                                      `https://github.com/GoogleCloudPlatform/blueprints.git`
                                  type: string
                                secretRef:
                                  description: Reference to secret containing authentication
                                    credentials. Optional.
                                  properties:
                                    name:
                                      description: Name of the secret. The secret
                                        is expected to be located in the same namespace
                                        as the resource containing the reference.
                                      type: string
                                  required:
                                  - name
                                  type: object
                              required:
                              - directory
                              - ref
                              - repo
                              type: object
                            oci:
                              description: OCI upstream package specification. Required
                                if `type` is `oci`. Must be unspecified if `type`
                                is not `oci`.
                              properties:
                                image:
                                  description: Image is the address of an OCI image.
                                  type: string
                              required:
                              - image
                              type: object
                            type:
                              description: Type of the repository (i.e. git, OCI).
                                If empty, `upstreamRef` will be used.
                              type: string
                            upstreamRef:
                              description: UpstreamRef is the reference to the package
                                from a registered repository rather than external
                                package.
                              properties:
                                name:
                                  description: '`Name` is the name of the referenced
                                    PackageRevision resource.'
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                      type: object
                    edit:
                      properties:
                        sourceRef:
                          properties:
                            name:
                              description: '`Name` is the name of the referenced PackageRevision
                                resource.'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    init:
                      properties:
                        description:
                          description: '`Description` is a short description of the
                            package.'
                          type: string
                        keywords:
                          description: '`Keywords` is a list of keywords describing
                            the package.'
                          items:
                            type: string
                          type: array
                        site:
                          description: '`Site is a link to page with information about
                            the package.'
                          type: string
                        subpackage:
                          description: '`Subpackage` is a directory path to a subpackage
                            to initialize. If unspecified, the main package will be
                            initialized.'
                          type: string
                      type: object
                    type:
                      type: string
                    upgrade:
                      properties:
                        localPackageRevisionRef:
                          description: |-
                            `LocalPackageRevisionRef` is the reference to the local package revision that
                            contains all the local changes on top of the `OldUpstream` package revision.
                          properties:
                            name:
                              description: '`Name` is the name of the referenced PackageRevision
                                resource.'
                              type: string
                          required:
                          - name
                          type: object
                        newUpstreamRef:
                          description: |-
                            `NewUpstream` is the reference to the new upstream package revision that the
                            local package will be upgraded to.
                          properties:
                            name:
                              description: '`Name` is the name of the referenced PackageRevision
                                resource.'
                              type: string
                          required:
                          - name
                          type: object
                        oldUpstreamRef:
                          description: |-
                            `OldUpstream` is the reference to the original upstream package revision that is
                            the common ancestor of the local package and the new upstream package revision.
                          properties:
                            name:
                              description: '`Name` is the name of the referenced PackageRevision
                                resource.'
                              type: string
                          required:
                          - name
                          type: object
                        strategy:
                          description: "\tDefines which strategy should be used to
                            update the package. It defaults to 'resource-merge'.\n
                            * resource-merge: Perform a structural comparison of the
                            original /\n   updated resources, and merge the changes
                            into the local package.\n * fast-forward: Fail without
                            updating if the local package was modified\n   since it
                            was fetched.\n * force-delete-replace: Wipe all the local
                            changes to the package and replace\n   it with the remote
                            version.\n * copy-merge: Copy all the remote changes to
                            the local package."
                          type: string
                      type: object
                  required:
                  - type
                  type: object
                type: array
              workspaceName:
                description: WorkspaceName is a short, unique description of the changes
                  contained in this package revision.
                type: string
            type: object
          status:
            description: PackageRevisionStatus defines the observed state of PackageRevision.
            properties:
              conditions:
                description: Conditions store the status conditions of the Memcached
                  instances
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deployment:
                description: Deployment is true if this is a deployment package (in
                  a deployment repository).
                type: boolean
              publishTimestamp:
                description: PublishedAt is the time when the packagerevision were
                  approved.
                format: date-time
                type: string
              publishedBy:
                description: PublishedBy is the identity of the user who approved
                  the packagerevision.
                type: string
              upstreamLock:
                description: UpstreamLock identifies the upstream data for this package.
                properties:
                  git:
                    description: Git is the resolved locator for a package on Git.
                    properties:
                      commit:
                        description: |-
                          Commit is the SHA-1 for the last fetch of the package.
                          This is set by kpt for bookkeeping purposes.
                        type: string
                      directory:
                        description: |-
                          Directory is the sub directory of the git repository that was fetched.
                          e.g. 'staging/cockroachdb'
                        type: string
                      ref:
                        description: |-
                          Ref can be a Git branch, tag, or a commit SHA-1 that was fetched.
                          e.g. 'master'
                        type: string
                      repo:
                        description: |-
                          Repo is the git repository that was fetched.
                          e.g. 'https://github.com/kubernetes/examples.git'
                        type: string
                    type: object
                  type:
                    description: Type is the type of origin.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
